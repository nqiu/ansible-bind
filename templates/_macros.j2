{#
 # Produce a bind style list of items
 # Add a semi colon after each items
 #
 # @param list parameter : the list of string items
 # @return string
 #}
{%- macro listify(parameter) -%}
{{ parameter if parameter is string else parameter | join('; ') }};
{%- endmacro -%}


{#
 # Take an 'human readable' email address and convert it to Bind email syntax
 #
 # @param string email the email address
 # @return string the email address emailified
 #}
{%- macro emailify(email) -%}
{{ email | replace('@', '.') }}
{%- endmacro -%}


{#
 # Convert a domain name to its FQDN version
 #
 # @param string domain the domain name to convert
 # @return the fqdnified email
 #}
{%- macro fqdn(domain) -%}
{{ domain if domain[domain | length -1] == '.' else domain + '.' }}
{%- endmacro -%}


{#
 # Produce a Bind zone statement from the given configuration
 #
 # @param string name the name of the zone (it's domain name)
 # @param dict config some configuration values
 #     config.class : OPTIONAL the class of the zone
 #     config.file : 'auto' for auto generated zone file
 #     config.allow_update : list of address/host autorized to perform update on this zone
 #
 # @return the zone statement
 #}
{%- macro zone(name, config) -%}
zone "{{ name }}" {{ config.class | d('IN') }} {
  type {{ config.type }};
{% if config.file == 'auto' %}
{%   if config.type in ['master'] %}
  file "{{ bind__static_zones_dir }}/db.{{ name | replace(' ', '') }}";
{%   else %}
  file "{{ bind__dynamic_zones_dir }}/db.{{ name | replace(' ', '') }}";
{%   endif %}
{% else %}
  file "{{ config.file }}";
{% endif %}  
{% if config.allow_update is defined %}
  allow-update { {{ listify(config.allow_update) }} };
{% endif %}
{% if config.masters is defined %}
  masters { {{ listify(config.masters) }} };
{% endif %}
};
{%- endmacro -%}


{#
 # Produce a Bind Zone RR statement from the given specifications
 #
 # @param dict spec the RR entry specifications
 #     spec.name : OPTIONAL the name of the entry
 #     spec.ttl : OPTIONAL the TTL of the entry
 #     spec.class : OPTIONAL the class of the entry
 #     spec.type : the type of the entry
 #     spec.data : depends on the value of type
 #           'SOA': data.ns   the name of the main name server
                    data.mail   the administrator email
                    
 #          -other-: OPTIONAL
 #
 # @return the RR entry
 #}
{%- macro rr(spec) -%}
{% set name = spec.name | d('') %}
{% set ttl = spec.ttl | d('') %}
{% set class = spec.class | d('IN') %}
{% set type = spec.type %}
{% if type == 'SOA' %}
{%   set data = [spec.data.ns,
                  fqdn( emailify(spec.data.mail) ),
                  '(\n',
                    ' ' * 80, spec.data.serial, ' ; Serial \n',
                    ' ' * 80, spec.data.refresh, ' ; Refresh \n',
                    ' ' * 80, spec.data.retry, ' ; Retry \n',
                    ' ' * 80, spec.data.expiry, ' ; Expire \n',
                    ' ' * 80, spec.data.negative, ' ; Negative Cache TTL \n',
                  ' ' * 80, ')'] | join(' ') %}
{% else %}
{%   set data = spec.data | d('') %}
{% endif %}
{{ name }}{{ ' ' * ((30 - name | length) | abs) }} {{ ttl }}{{ ' ' * ((10 - class | length) | abs) }} {{ class }}{{ ' ' * ((10 - class | length) | abs) }} {{ type }}{{ ' ' * ((20 - type | length) | abs) }} {{ data }}
{%- endmacro -%}
